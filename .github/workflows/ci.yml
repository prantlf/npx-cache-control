name: Build and Test or Release

on:
  push:
    branches:
      - master
    tags-ignore:
      - '**'
    paths-ignore:
      - '**/*.md'
      - LICENSE
  pull_request:

jobs:

  linux:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.bump.outputs.bumped }}
      changed-files: ${{ steps.shelve.outputs.files }}
    steps:
    - name: Checkout Sources
      uses: actions/checkout@v4
    - name: Setup V
      uses: prantlf/setup-v-action@v2
    - name: Bump version
      id: bump
      uses: prantlf/bump-version-action@v2
      with:
        bump-files: src/npxcc.v
    - name: Build and Test V
      run: make RELEASE=1
    - name: Install PNPM
      uses: pnpm/action-setup@v2
      with:
        version: latest
    - name: Install Node
      uses: actions/setup-node@v4
      with:
        node-version: 'lts/*'
        cache: 'pnpm'
    - name: Install Dependencies
      run: pnpm i --frozen-lockfile --no-verify-store-integrity
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DEBUG: linkbe,grabghr
    - name: Test Node.js
      run: |
        node_modules/.bin/npxcc -V
        node_modules/.bin/npxcc -V
    - name: Shelve changes
      if: ${{ steps.bump.outputs.bumped == 'true' }}
      id: shelve
      uses: prantlf/shelve-changes-action@v1
    - name: Shelve output
      if: ${{ steps.bump.outputs.bumped == 'true' }}
      uses: prantlf/shelve-output-action@v2

  macos:
    needs:
      - linux
    runs-on: macos-latest
    steps:
    - name: Checkout Sources
      uses: actions/checkout@v4
    - name: Unshelve changes
      if: ${{ needs.linux.outputs.changed == 'true' }}
      uses: prantlf/unshelve-changes-action@v1
      with:
        files: ${{ needs.linux.outputs.changed-files }}
        discard-shelf: false
    - name: Setup V
      uses: prantlf/setup-v-action@v2
    - name: Build and Test
      run: make RELEASE=1
    - name: Install PNPM
      uses: pnpm/action-setup@v2
      with:
        version: latest
    - name: Install Node
      uses: actions/setup-node@v4
      with:
        node-version: 'lts/*'
        cache: 'pnpm'
    - name: Install Dependencies
      run: pnpm i --frozen-lockfile --no-verify-store-integrity
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DEBUG: linkbe,grabghr
    - name: Test Node.js
      run: |
        node_modules/.bin/npxcc -V
        node_modules/.bin/npxcc -V
      env:
        DEBUG: linkbe,grabghr
    - name: Shelve output
      if: ${{ needs.linux.outputs.changed == 'true' }}
      uses: prantlf/shelve-output-action@v2
    - name: Build ARM
      run: make build RELEASE=1 ARM=1
    - name: Shelve output
      if: ${{ needs.linux.outputs.changed == 'true' }}
      uses: prantlf/shelve-output-action@v2
      with:
        arch: arm64

  windows:
    needs:
      - linux
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Sources
      uses: actions/checkout@v4
    - name: Unshelve changes
      if: ${{ needs.linux.outputs.changed == 'true' }}
      uses: prantlf/unshelve-changes-action@v1
      with:
        files: ${{ needs.linux.outputs.changed-files }}
        discard-shelf: false
    - name: Setup V
      uses: prantlf/setup-v-action@v2
    - name: Install Cross-Compiler
      run: sudo apt-get install gcc-mingw-w64-x86-64
    - name: Build Windows
      run: make build RELEASE=1 WINDOWS=1
    - name: Shelve output
      if: ${{ needs.linux.outputs.changed == 'true' }}
      uses: prantlf/shelve-output-action@v2
      with:
        os: windows

  # windows:
  #   needs:
  #     - linux
  #   runs-on: windows-latest
  #   steps:
  #   - name: Checkout Sources
  #     uses: actions/checkout@v4
  #   - name: Unshelve changes
  #     if: ${{ needs.linux.outputs.changed == 'true' }}
  #     uses: prantlf/unshelve-changes-action@v1
  #     with:
  #       files: ${{ needs.linux.outputs.changed-files }}
  #       discard-shelf: false
  #   - name: Setup V
  #     uses: prantlf/setup-v-action@v2
  #     with:
  #       install-dependencies: false
  #   - name: Install Dependencies
  #     run: |
  #       md src\modules
  #       md src\modules\prantlf
  #       git clone --depth=1 --recursive --shallow-submodules https://github.com/prantlf/v-cargs src\modules\prantlf\cargs
  #       git clone --depth=1 --recursive --shallow-submodules https://github.com/prantlf/v-debug src\modules\prantlf\debug
  #       git clone --depth=1 --recursive --shallow-submodules https://github.com/prantlf/v-osutil src\modules\prantlf\osutil
  #       git clone --depth=1 --recursive --shallow-submodules https://github.com/prantlf/v-pcre src\modules\prantlf\pcre
  #       git clone --depth=1 --recursive --shallow-submodules https://github.com/prantlf/v-strutil src\modules\prantlf\strutil
  #   - name: Build
  #     run: cmd /c make.bat
  #   - name: Install PNPM
  #     uses: pnpm/action-setup@v2
  #     with:
  #       version: latest
  #   - name: Install Node
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: 'lts/*'
  #       cache: 'pnpm'
  #   - name: Install Dependencies
  #     run: pnpm i --frozen-lockfile --no-verify-store-integrity
  #     env:
  #       DEBUG: linkbe,grabghr
  #   - name: Test Node.js with CMD
  #     shell: cmd
  #     run: |
  #       node_modules\.bin\npxcc -V
  #       node_modules\.bin\npxcc -V
  #     env:
  #       DEBUG: linkbe,grabghr
  #   - name: Test Node.js with PowerShell
  #     shell: pwsh
  #     run: |
  #       .\node_modules\.bin\npxcc -V
  #       .\node_modules\.bin\npxcc -V
  #     env:
  #       DEBUG: linkbe,grabghr
  #   - name: Shelve output
  #     if: ${{ needs.linux.outputs.changed == 'true' }}
  #     uses: prantlf/shelve-output-action@v2

  release:
    if: ${{ github.ref_name == 'master' && needs.linux.outputs.changed == 'true' }}
    needs:
      - linux
      - macos
      - windows
    runs-on: ubuntu-latest
    steps:
    - name: Checkout sources
      uses: actions/checkout@v4
    - name: Unshelve changes
      uses: prantlf/unshelve-changes-action@v1
      with:
        files: ${{ needs.linux.outputs.changed-files }}
    - name: Unshelve output
      uses: prantlf/unshelve-output-action@v4
    - name: Publish
      uses: prantlf/finish-release-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
