name: Build and Test or Release

on:
  push:
    branches:
      - master
    tags-ignore:
      - '**'
    paths-ignore:
      - '**/*.md'
      - LICENSE
  pull_request:

jobs:

  linux:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.bump.outputs.bumped }}
      changed-files: ${{ steps.shelve.outputs.files }}
    steps:
    - name: Checkout Sources
      uses: actions/checkout@v4
    - name: Setup V
      uses: prantlf/setup-v-action@v2
    - name: Bump version V
      id: bump
      uses: prantlf/bump-version-action@v2
      with:
        bump-files: src/npxcc.v
    - name: Build and Test V
      run: make RELEASE=1
    - name: Install PNPM
      uses: pnpm/action-setup@v2
      with:
        version: latest
    - name: Install Node
      uses: actions/setup-node@v4
      with:
        node-version: 'lts/*'
        cache: 'pnpm'
    - name: Install Dependencies
      run: pnpm i --frozen-lockfile --no-verify-store-integrity
    - name: Bump version NPM
      if: ${{ steps.bump.outputs.bumped == 'true' }}
      env:
        NEW_VERSION: ${{ steps.bump.outputs.new-version }}
      run: npm version $NEW_VERSION --no-git-tag-version
    # - name: Build and Test NPM
    #   run: npm test
    - name: Shelve changes
      if: ${{ steps.bump.outputs.bumped == 'true' }}
      id: shelve
      uses: prantlf/shelve-changes-action@v1
    - name: Shelve output
      if: ${{ steps.bump.outputs.bumped == 'true' }}
      uses: prantlf/shelve-output-action@v2

  macos:
    needs:
      - linux
    runs-on: macos-latest
    steps:
    - name: Checkout Sources
      uses: actions/checkout@v4
    - name: Unshelve changes
      if: ${{ needs.linux.outputs.changed == 'true' }}
      uses: prantlf/unshelve-changes-action@v1
      with:
        files: ${{ needs.linux.outputs.changed-files }}
        discard-shelf: false
    - name: Setup V
      uses: prantlf/setup-v-action@v2
    - name: Build and Test
      run: make RELEASE=1
    - name: Install PNPM
      uses: pnpm/action-setup@v2
      with:
        version: latest
    - name: Install Node
      uses: actions/setup-node@v4
      with:
        node-version: 'lts/*'
        cache: 'pnpm'
    - name: Install Dependencies
      run: pnpm i --frozen-lockfile --no-verify-store-integrity
    # - name: Build and Test NPM
    #   run: npm test
    - name: Shelve output
      if: ${{ needs.linux.outputs.changed == 'true' }}
      uses: prantlf/shelve-output-action@v2

  windows:
    needs:
      - linux
    runs-on: windows-latest
    steps:
    - name: Checkout Sources
      uses: actions/checkout@v4
    - name: Unshelve changes
      if: ${{ needs.linux.outputs.changed == 'true' }}
      uses: prantlf/unshelve-changes-action@v1
      with:
        files: ${{ needs.linux.outputs.changed-files }}
        discard-shelf: false
    - name: Setup V
      uses: prantlf/setup-v-action@v2
    - name: Build
      run: cmd /c make.bat
    - name: Install PNPM
      uses: pnpm/action-setup@v2
      with:
        version: latest
    - name: Install Node
      uses: actions/setup-node@v4
      with:
        node-version: 'lts/*'
        cache: 'pnpm'
    - name: Install Dependencies
      run: pnpm i --frozen-lockfile --no-verify-store-integrity
    # - name: Build and Test NPM
    #   run: npm test
    - name: Shelve output
      if: ${{ needs.linux.outputs.changed == 'true' }}
      uses: prantlf/shelve-output-action@v2

  release:
    if: ${{ github.ref_name == 'master' && needs.linux.outputs.changed == 'true' }}
    needs:
      - linux
      - macos
      - windows
    runs-on: ubuntu-latest
    steps:
    - name: Checkout sources
      uses: actions/checkout@v4
    - name: Unshelve changes
      uses: prantlf/unshelve-changes-action@v1
      with:
        files: ${{ needs.linux.outputs.changed-files }}
    - name: Unshelve output
      uses: prantlf/unshelve-output-action@v3
    - name: Publish V
      uses: prantlf/finish-release-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Install PNPM
      uses: pnpm/action-setup@v2
      with:
        version: latest
    - name: Install Node
      uses: actions/setup-node@v4
      with:
        node-version: 'lts/*'
        cache: 'pnpm'
        registry-url: 'https://registry.npmjs.org'
    - name: Install Dependencies
      run: pnpm i --frozen-lockfile --no-verify-store-integrity
    - name: Publish NPM
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
